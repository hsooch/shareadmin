<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="menuMapper">

    <!-- 메뉴 등록 쿼리 -->
    <insert id="insertMenu" parameterType="menuVO" useGeneratedKeys="true" keyProperty="seq">
        INSERT INTO TBL_MENU(PARENT_SEQ, MENU_NAME, MENU_URL, MENU_INDEX, DEPTH, MAIN_YN)
                VALUES (#{parentSeq}, #{menuName}, #{menuUrl}, #{menuIndex}, #{depth}, #{mainYn});
    </insert>

    <!-- 같은 depth에 동일한 이름의 메뉴 개수 조회 -->
    <select id="getSameNameMenu" parameterType="Map" resultType="menuVO">
        SELECT * FROM TBL_MENU WHERE MENU_NAME = #{menuName} AND DEPTH = #{depth}
    </select>

    <!-- 메뉴 업데이트 -->
    <update id="updateMenu" parameterType="menuVO">
        UPDATE TBL_MENU
          SET PARENT_SEQ = #{parentSeq},
              MENU_NAME = #{menuName},
              MENU_URL = #{menuUrl},
              MENU_INDEX = #{menuIndex},
              DEPTH = #{depth},
              MAIN_YN = #{mainYn}
        WHERE MENU_SEQ = #{seq}
    </update>

    <!-- 유저별 메뉴 목록 조회 -->
    <select id="getMenuListByUser" parameterType="Integer" resultType="menuVO">
        SELECT M.*
        FROM TBL_MENU M, TBL_MENU_PERMISION_USER MPU
        WHERE M.MENU_SEQ = MPU.MENU_SEQ AND MPU.USER_SEQ = #{userSeq}
        AND DISPLAY_YN = 'Y'
        ORDER BY M.DEPTH, M.MENU_INDEX;
    </select>
    
    <select id="selectMenuList" parameterType="Map" resultType="menuVO">
		SELECT *
		FROM (
				 SELECT *
				 FROM TBL_MENU
				 <choose>
					<when test="parentSeq != null">
					WHERE PARENT_SEQ = #{parentSeq} AND DEL_YN = 'N'
					</when>
					<otherwise>
					WHERE PARENT_SEQ IS NULL AND DEL_YN = 'N'
					</otherwise>
				 </choose>
				 UNION ALL
				 SELECT B.*
				 FROM TBL_MENU A, TBL_MENU B
				 <choose>
					<when test="parentSeq != null">
					WHERE A.PARENT_SEQ = #{parentSeq} AND A.MENU_SEQ = B.PARENT_SEQ AND B.DEL_YN = 'N'
					</when>
					<otherwise>
					WHERE A.PARENT_SEQ IS NULL AND A.MENU_SEQ = B.PARENT_SEQ AND B.DEL_YN = 'N'
					</otherwise>
				 </choose>
			 ) A
		ORDER BY MENU_SEQ;
	</select>
    
    <!-- 메뉴 관리 메뉴 목록 조회 -->
    <select id="getMenuList" parameterType="map" resultType="menuVO">
    	/* menuMapper.getMenuList */
    	SELECT
    		PARENT_SEQ
    		,A.MENU_SEQ
    		,MENU_NAME
    		,MENU_URL
    		,MENU_INDEX
    		,DEPTH
    		,MAIN_YN
    		, (SELECT COUNT(*) FROM TBL_MENU WHERE PARENT_SEQ = A.MENU_SEQ AND DEL_YN='N') AS LOW_COUNT
    	FROM 
    		TBL_MENU A
    	WHERE
    		DEL_YN='N'
    	<choose>
			<when test="parentSeq != null">
			AND PARENT_SEQ = #{parentSeq}
			</when>
			<otherwise>
			AND PARENT_SEQ IS NULL
			</otherwise>
		</choose>
    </select>
    
    <!-- 메뉴 정보 조회 -->
	<select id="getMenuInfo" parameterType="Map" resultType="menuVO">
		SELECT
			A.PARENT_SEQ
			, (SELECT MENU_NAME FROM TBL_MENU WHERE MENU_SEQ = A.PARENT_SEQ) AS PARENT_MENU_NAME
			, MENU_SEQ
			, MENU_NAME
			, MENU_URL
			, MENU_INDEX
			, DEPTH
			, REG_DT
			, DISPLAY_YN
			, READONLY_YN
			, DEL_YN
			, A.REG_USER_SEQ
			, (SELECT USER_NAME FROM TBL_USER WHERE USER_SEQ = A.REG_USER_SEQ) AS REG_USER_NAME
			, (SELECT TOP(1) MENU_INDEX FROM TBL_MENU WHERE PARENT_SEQ = #{seq} ORDER BY MENU_SEQ DESC) AS LAST_INDEX
			<choose>
				<when test="parentSeq != null">
				, (SELECT TOP(1) MENU_INDEX FROM TBL_MENU WHERE PARENT_SEQ = A.PARENT_SEQ ORDER BY MENU_SEQ DESC) AS INDEX_COUNT
				</when>
				<otherwise>
				, (SELECT TOP(1) MENU_INDEX FROM TBL_MENU WHERE PARENT_SEQ IS NULL ORDER BY MENU_SEQ DESC) AS INDEX_COUNT
				</otherwise>
			</choose>
		FROM TBL_MENU A
		WHERE MENU_SEQ = #{seq}
	</select>

	<!-- 메뉴 정보 수정 -->
	<update id="upsertMenuInfo" parameterType="Map">
		/* menuMapper.upsertMenuInfo */
		
		IF NOT EXISTS (SELECT 1 FROM TBL_MENU WHERE MENU_SEQ = #{seq})
    		INSERT INTO TBL_MENU(
    			PARENT_SEQ
    			,MENU_NAME
    			,MENU_URL
    			,MENU_INDEX
    			,DEPTH
    			,MAIN_YN
    			,REG_DT
    			,DISPLAY_YN
    			,REG_USER_SEQ
    		)
    		VALUES(
    			#{parentSeq}
    			,#{menuName}
    			,#{menuUrl}
    			,#{menuIndex}
    			,#{depth}
    			,'N'
    			,GETDATE()
    			,#{displayYn}
    			,#{regUserSeq}
    		)
    	ELSE
		UPDATE TBL_MENU
		SET
			<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(menuName)">
				MENU_NAME = #{menuName},
			</if>
			<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(menuUrl)">
				MENU_URL = #{menuUrl},
			</if>
			<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(displayYn)">
				DISPLAY_YN = #{displayYn},
			</if>
			<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(regUserSeq)">
				REG_USER_SEQ = #{regUserSeq},
			</if>
			REG_DT = GETDATE()
		WHERE
			MENU_SEQ = #{seq}
	</update>

	<!-- 코드 삭제 (숨기기) -->
	<update id="deleteMenuInfo" parameterType="map">
		/* menuMapper.deleteMenuInfo */
		UPDATE
			TBL_MENU
		SET
			DEL_YN = 'Y',
	    	DISPLAY_YN = 'N'
		WHERE
			MENU_SEQ = #{seq}
	</update>
	
	<!-- 메뉴 순서 변경 -->
	<update id="changeMenuIndex" parameterType="map">
		/* menuMapper.changeMenuIndex */
		UPDATE
			TBL_MENU
        SET
        	MENU_INDEX = CASE
    			WHEN MENU_SEQ = #{seqA}  THEN (SELECT MENU_INDEX FROM TBL_MENU WHERE MENU_SEQ = #{seqB})
        		WHEN MENU_SEQ = #{seqB}  THEN (SELECT MENU_INDEX FROM TBL_MENU WHERE MENU_SEQ = #{seqA})
        		END
		WHERE
        	MENU_SEQ IN (#{seqA}, #{seqB})
        AND
        	DEPTH = #{depth}
        AND
        	DEL_YN = 'N'
	</update>
	
	<!-- 최상위 메뉴 인덱스 -->
	<select id="getTopMenuIndex" resultType="Integer">
		SELECT
			TOP(1) MENU_INDEX
		FROM TBL_MENU
		WHERE PARENT_SEQ IS NULL ORDER BY MENU_INDEX DESC
	</select>

</mapper>















