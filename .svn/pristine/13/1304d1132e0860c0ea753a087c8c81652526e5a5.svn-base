<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="universityMapper">

	<!-- 대학교 정보를 등록 한다. -->
    <insert id="insertUniversityInfo" parameterType="universityInfo">
		INSERT INTO TBL_UNIVERSITY_INFO(UNIV_CODE, AREA_CODE,
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(setupCode)">
			SETUP_TYPE,
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(zipCode)">
			ZIP_CODE,
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(defaultAddr)">
			ADDR_DEFAULT,
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(detailAddr)">
			ADDR_DETAIL,
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(logoFileKey)">
			LOGO_FILE_KEY,
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(homeUrl)">
			HOME_URL,
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(miniHomeUrl)">
			MINI_HOME_URL,
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(telNum)">
			TEL_NUM,
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(commonCode)">
			COMMON_CODE,
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(univNameEn)">
			UNIV_NAME_EN,
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(applyDocId)">
			APPLY_DOC_ID,
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(applyCancelDocId)">
			APPLY_CANCEL_DOC_ID,
		</if>
									REG_USER_SEQ, MOD_USER_SEQ, ENABLED_YN)
				VALUES(#{universityCode}, #{areaCode},
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(setupCode)">
			#{setupCode},
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(zipCode)">
			#{zipCode},
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(defaultAddr)">
			#{defaultAddr},
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(detailAddr)">
			#{detailAddr},
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(logoFileKey)">
			#{logoFileKey},
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(homeUrl)">
			#{homeUrl},
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(miniHomeUrl)">
			#{miniHomeUrl},
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(telNum)">
			#{telNum},
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(commonCode)">
			#{commonCode},
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(univNameEn)">
			#{univNameEn},
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(applyDocId)">
			#{applyDocId},
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(applyCancelDocId)">
			#{applyCancelDocId},
		</if>
						#{regUserSeq}, #{modUserSeq}, #{enableYn});
	</insert>

	<!-- 대학교 정보를 갱신 한다. -->
	<update id="updateUniversityInfo" parameterType="universityInfo">
		UPDATE TBL_UNIVERSITY_INFO
		SET MOD_DT = GETDATE(), MOD_USER_SEQ = #{modUserSeq}
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(setupCode)">
			, SETUP_TYPE = #{setupCode}
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(zipCode)">
			, ZIP_CODE = #{zipCode}
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(defaultAddr)">
			, ADDR_DEFAULT = #{defaultAddr}
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(detailAddr)">
			, ADDR_DETAIL = #{detailAddr}
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(logoFileKey)">
			, LOGO_FILE_KEY = #{logoFileKey}
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(homeUrl)">
			, HOME_URL = #{homeUrl}
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(miniHomeUrl)">
			, MINI_HOME_URL = #{miniHomeUrl}
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(telNum)">
			, TEL_NUM = #{telNum}
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(enableYn)">
			, ENABLED_YN = #{enableYn}
		</if>
        <if test="gradeTranceType != null and gradeTranceType > 0">
            , GRADE_TRANCE_TYPE = #{gradeTranceType}
        </if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(commonCode)">
			, COMMON_CODE = #{commonCode}
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(univNameEn)">
			, UNIV_NAME_EN = #{univNameEn}
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(applyDocId)">
			, APPLY_DOC_ID = #{applyDocId}
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(applyCancelDocId)">
			, APPLY_CANCEL_DOC_ID = #{applyCancelDocId}
		</if>
		WHERE UNIV_CODE = #{universityCode}
	</update>

	<!-- 대학교 정보를 조회 한다. -->
	<select id="getUniversityInfo" parameterType="Map" resultType="universityInfo">
		SELECT
			U.UNIV_CODE AS UNIVERSITY_CODE,
			(SELECT CODE_NAME FROM TBL_CODE WHERE USE_YN = 'Y' AND DEL_YN = 'N' AND CODE = U.UNIV_CODE) AS UNIVERSITY_CODE_NAME,
			U.AREA_CODE,
			(SELECT CODE_NAME FROM TBL_CODE WHERE USE_YN = 'Y' AND DEL_YN = 'N' AND CODE = U.AREA_CODE) AS AREA_CODE_NAME,
			U.SETUP_TYPE AS SETUP_CODE,
			(SELECT CODE_NAME FROM TBL_CODE WHERE USE_YN = 'Y' AND DEL_YN = 'N' AND CODE = U.SETUP_TYPE) AS SETUP_CODE_NAME,
			U.ZIP_CODE,
			U.ADDR_DEFAULT AS DEFAULT_ADDR,
			U.ADDR_DETAIL AS DETAIL_ADDR,
			U.TEL_NUM,
			F.FILE_KEY AS LOGO_FILE_KEY,
			F.ORI_FILE_NAME AS LOGO_FILE_NAME,
			F.DOWNLOAD_URL AS LOGO_FILE_URL,
			U.HOME_URL,
			U.MINI_HOME_URL,
			U.COMMON_CODE,
			U.UNIV_NAME_EN,
			U.APPLY_DOC_ID,
			U.APPLY_CANCEL_DOC_ID,
			U.ENABLED_YN AS ENABLE_YN,
			(SELECT USER_NAME FROM TBL_USER WHERE USER_SEQ = U.REG_USER_SEQ) AS REG_USER_NAME,
			ISNULL(U.GRADE_TRANCE_TYPE, 1) AS GRADE_TRANCE_TYPE
		FROM TBL_UNIVERSITY_INFO U LEFT JOIN TBL_FILE_INFO F ON (U.LOGO_FILE_KEY = F.FILE_KEY)
		WHERE UNIV_CODE = #{universityCode}
	</select>

	<!-- 대학교 정보에서 등록된 로고 파일을 제거 한다. -->
	<update id="removeLogoFile" parameterType="Map">
		UPDATE TBL_UNIVERSITY_INFO
		SET LOGO_FILE_KEY = NULL
		WHERE UNIV_CODE = #{universityCode}
	</update>

	<!-- MOU 대학교 정보 등록 -->
	<insert id="insertUniversityMou" parameterType="mouVO">
		<selectKey keyProperty="mouIndex" resultType="java.lang.Integer" order="BEFORE">
			SELECT ISNULL(MAX(MOU_INDEX),0)+1 FROM TBL_UNIVERSITY_MOU WHERE UNIV_CODE = #{univCode} AND MOU_TYPE = #{mouType}
		</selectKey>
		INSERT INTO TBL_UNIVERSITY_MOU(UNIV_CODE, MOU_TYPE, MOU_INDEX, REG_USER_SEQ, MOD_USER_SEQ)
				VALUES (#{univCode}, #{mouType}, #{mouIndex}, #{regUserSeq}, #{modUserSeq})
	</insert>

	<!-- MOU 대학교 정보 삭제 -->
	<delete id="deleteUniversityMou" parameterType="Map">
		DELETE FROM TBL_UNIVERSITY_MOU WHERE SEQ = #{seq}
	</delete>

	<!-- MOU 설정 대학 정렬 값 변경 -->
	<update id="updateMouIndex" parameterType="Map">
		UPDATE TBL_UNIVERSITY_MOU
		SET MOU_INDEX = #{mouIndex}
		WHERE SEQ = #{seq}
	</update>

	<!-- MOU 대학 목록 조회 -->
	<select id="getMouUniversityList" parameterType="Map" resultType="mouVO">
		SELECT
			SEQ,
			UNIV_CODE,
			(SELECT CODE_NAME FROM TBL_CODE WHERE USE_YN = 'Y' AND DEL_YN = 'N' AND CODE = UM.UNIV_CODE) AS UNIV_CODE_NAME,
			MOU_TYPE,
			MOU_INDEX
		FROM TBL_UNIVERSITY_MOU UM
		WHERE UNIV_CODE = #{univCode} AND MOU_TYPE = #{mouType}
		ORDER BY UM.MOU_INDEX
	</select>

	<!-- 참여중인 MOU 협의회 목록 조회 -->
	<select id="getAttachedGroupList" parameterType="Map" resultType="umap">
		SELECT
			UNIV_CODE,
			MOU_TYPE,
			(SELECT CODE_NAME FROM TBL_CODE WHERE CODE = TUMG.MOU_TYPE) AS GROUP_NAME
		FROM TBL_UNIVERSITY_MOU_GROUP TUMG
		WHERE UNIV_CODE = #{univCode};
	</select>

	<!-- 참여중이 아닌 MOU 협의회 목록 조회 -->
	<select id="getUnAttachedGroupList" parameterType="Map" resultType="umap">
		SELECT
			TC.PARENT_CODE,
			TC.CODE,
			TC.CODE_NAME
		FROM TBL_CODE TC
		WHERE TC.PARENT_CODE = #{mouGroupCode} AND TC.USE_YN = 'Y' AND TC.DEL_YN = 'N'
			  AND NOT EXISTS(SELECT 1
							 FROM TBL_UNIVERSITY_MOU_GROUP TUMG
							 WHERE TUMG.UNIV_CODE = #{univCode} AND TC.CODE = TUMG.MOU_TYPE);
	</select>

	<!-- 참여할 MOU 협의회 추가 -->
	<insert id="addMouGroup" parameterType="Map">
		INSERT INTO TBL_UNIVERSITY_MOU_GROUP(
			UNIV_CODE, MOU_TYPE, MOU_INDEX,
			REG_USER_SEQ, MOD_USER_SEQ)
		VALUES (
			#{univCode}, #{mouType}, 1,
			#{userSeq}, #{userSeq}
		)
	</insert>

	<!-- 참여중인 MOU 협의회 제거 -->
	<delete id="removeMouGroup" parameterType="Map">
		DELETE FROM TBL_UNIVERSITY_MOU_GROUP
		WHERE UNIV_CODE = #{univCode} AND MOU_TYPE = #{mouType}
	</delete>

	<!-- MOU 개별 협약 대학 리스트 -->
	<select id="getIndividualMouList" parameterType="Map" resultType="umap">
		SELECT
			MOU_UNIV_CODE,
			(SELECT CODE_NAME FROM TBL_CODE WHERE CODE = TUM.MOU_UNIV_CODE) AS MOU_UNIV_NAME
		FROM TBL_UNIVERSITY_MOU TUM
		WHERE UNIV_CODE = #{univCode}
	</select>

	<!-- MOU 설정이 되어 있지 않은 대학 목록 조회 -->
	<select id="getUnivListWithoutMou" parameterType="Map" resultType="umap">
		SELECT
			CODE,
			CODE_NAME,
			PARENT_CODE
		FROM TBL_CODE TC
		WHERE TC.USE_YN = 'Y' AND TC.DEL_YN = 'N' AND PARENT_CODE = #{areaCode}
			  AND NOT EXISTS(SELECT 1
							 FROM TBL_UNIVERSITY_MOU TUM
							 WHERE TUM.UNIV_CODE = #{univCode} AND TUM.MOU_UNIV_CODE = TC.CODE)
	</select>

	<!-- 개별 협약 대학 추가 -->
	<insert id="addIndividualMouUniv" parameterType="Map">
		INSERT INTO TBL_UNIVERSITY_MOU(
			UNIV_CODE, MOU_UNIV_CODE, MOU_INDEX,
			REG_USER_SEQ, MOD_USER_SEQ
		) VALUES (
				#{univCode}, #{mouUnivCode}, 1,
				#{userSeq}, #{userSeq}
		)
	</insert>

	<!-- 개별 협약 대학 삭제 -->
	<delete id="removeIndevidualMouUniv" parameterType="Map">
		DELETE FROM TBL_UNIVERSITY_MOU WHERE UNIV_CODE = #{univCode} AND MOU_UNIV_CODE = #{mouUnivCode}
	</delete>

	<!-- 개별 및 협의회에 속한 MOU 대학 목록 조회 -->
	<select id="getMouUnivList" parameterType="Map" resultType="umap">
		SELECT
			A.MOU_UNIV_CODE,
			A.AREA_NAME,
			A.MOU_UNIV_NAME,
			CASE WHEN TMAL.LIMIT_CNT IS NULL
				THEN 0
			ELSE TMAL.LIMIT_CNT END AS LIMIT_CNT
		FROM (

				 SELECT
					 UNIV_CODE                     AS MOU_UNIV_CODE,
					 (SELECT CODE_NAME
					  FROM TBL_CODE
					  WHERE CODE = TUMG.UNIV_CODE) AS MOU_UNIV_NAME,
					 (SELECT CODE_NAME
					  FROM TBL_CODE
					  WHERE CODE = TC.PARENT_CODE) AS AREA_NAME
				 FROM TBL_UNIVERSITY_MOU_GROUP TUMG
					 JOIN TBL_CODE TC ON (TUMG.UNIV_CODE = TC.CODE AND TC.USE_YN = 'Y' AND TC.DEL_YN = 'N')
				 WHERE UNIV_CODE != #{univCode}
					   AND MOU_TYPE IN (SELECT MOU_TYPE
									   FROM TBL_UNIVERSITY_MOU_GROUP
									   WHERE UNIV_CODE = #{univCode})
				 UNION
				 SELECT
					 MOU_UNIV_CODE,
					 (SELECT CODE_NAME
					  FROM TBL_CODE
					  WHERE CODE = TUM.MOU_UNIV_CODE) AS MOU_UNIV_NAME,
					 (SELECT CODE_NAME
					  FROM TBL_CODE
					  WHERE CODE = TC.PARENT_CODE)    AS AREA_NAME
				 FROM TBL_UNIVERSITY_MOU TUM
					 JOIN TBL_CODE TC ON (TUM.MOU_UNIV_CODE = TC.CODE AND TC.USE_YN = 'Y' AND TC.DEL_YN = 'N')
				 WHERE UNIV_CODE = #{univCode}) AS A
			LEFT JOIN TBL_MOU_APPLY_LIMIT TMAL ON (TMAL.UNIV_CODE = #{univCode} AND A.MOU_UNIV_CODE = TMAL.MOU_UNIV_CODE)
		ORDER BY A.AREA_NAME, A.MOU_UNIV_NAME;
	</select>

	<!-- MOU 대학의 교류 신청 인원 제한 등록 및 갱신 -->
	<insert id="upsertMouApplyLimit" parameterType="Map">
		IF NOT EXISTS(SELECT 1
					  FROM TBL_MOU_APPLY_LIMIT
					  WHERE UNIV_CODE = #{univCode} AND MOU_UNIV_CODE = #{mouUnivCode})
			INSERT INTO TBL_MOU_APPLY_LIMIT (UNIV_CODE, MOU_UNIV_CODE, LIMIT_CNT, REG_USER_SEQ, MOD_USER_SEQ)
			VALUES (#{univCode}, #{mouUnivCode}, #{limitCnt}, #{regUserSeq}, #{modUserSeq})
		ELSE
			UPDATE TBL_MOU_APPLY_LIMIT
			SET LIMIT_CNT = #{limitCnt}, MOD_USER_SEQ = #{userSeq}, MOD_DT = GETDATE()
			WHERE UNIV_CODE = #{univCode} AND MOU_UNIV_CODE = #{mouUnivCode}
	</insert>

</mapper>